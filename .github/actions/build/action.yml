name: Build

outputs:
  plugin-id:
    description: 'The plugin ID'
    value: ${{ steps.metadata.outputs.plugin-id }}
  archive:
    description: 'The packaged and signed plugin artifact'
    value: ${{ steps.metadata.outputs.archive }}

inputs:
  policy_token:
    type: string
    description: 'Grafana access policy token. https://grafana.com/developers/plugin-tools/publish-a-plugin/sign-a-plugin#generate-an-access-policy-token'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm install
      shell: bash

    - name: Check types
      run: npm run typecheck
      shell: bash

    - name: Lint
      run: npm run lint
      shell: bash

    - name: Unit tests
      run: npm run test:ci
      shell: bash

    - name: Build frontend
      run: npm run build
      shell: bash

    - name: Check bundlesize
      run: yarn run bundlewatch
      shell: bash
    
    - name: Start Grafana Docker container
      run: npm run server:ci
      shell: bash
    - name: Install Playwright Browsers
      run: npx playwright install chromium --with-deps
      shell: bash
    - name: Wait for Docker container
      run: sleep 60
      shell: bash
    - name: Run e2e tests
      id: run-tests
      run: npm run e2e:fast
      shell: bash
    - name: Upload Playwright artifacts
      uses: actions/upload-artifact@v4
      if: ${{ (always() && steps.run-tests.outcome == 'success') || (failure() && steps.run-tests.outcome == 'failure') }}
      with:
        name: playwright-report-${{github.run_id}}
        path: playwright-report/
        retention-days: 5
    - name: Stop Grafana Docker container
      run: npm run server:ci:down
      shell: bash

    - name: Check for backend
      id: check-for-backend
      run: |
        if [ -f "Magefile.go" ]
        then
          echo "has-backend=true" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Setup Go environment
      if: steps.check-for-backend.outputs.has-backend == 'true'
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Test backend
      if: steps.check-for-backend.outputs.has-backend == 'true'
      uses: magefile/mage-action@v3
      with:
        version: latest
        args: coverage

    - name: Build backend
      if: steps.check-for-backend.outputs.has-backend == 'true'
      uses: magefile/mage-action@v3
      with:
        version: latest
        args: buildAll

    - name: Sign plugin
      run: npm run sign
      shell: bash
      env:
        GRAFANA_ACCESS_POLICY_TOKEN: ${{ inputs.policy_token }}
      if: ${{ inputs.policy_token != '' }}

    - name: Get plugin metadata
      id: metadata
      shell: bash
      run: |
        sudo apt-get install jq

        export GRAFANA_PLUGIN_ID=$(cat dist/plugin.json | jq -r .id)
        export GRAFANA_PLUGIN_ARTIFACT=${GRAFANA_PLUGIN_ID}-latest.zip

        echo "plugin-id=${GRAFANA_PLUGIN_ID}" >> $GITHUB_OUTPUT
        echo "archive=${GRAFANA_PLUGIN_ARTIFACT}" >> $GITHUB_OUTPUT

        echo "archive=${GRAFANA_PLUGIN_ARTIFACT}"

    - name: Package plugin
      id: package-plugin
      shell: bash
      run: |
        mv dist ${{ steps.metadata.outputs.plugin-id }}
        zip ${{ steps.metadata.outputs.archive }} ${{ steps.metadata.outputs.plugin-id }} -r

    - name: Archive Build
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.metadata.outputs.archive }}
        path: ${{ steps.metadata.outputs.archive }}
        retention-days: 5
